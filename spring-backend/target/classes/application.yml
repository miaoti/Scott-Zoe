server:
  port: ${PORT:8080}
  servlet:
    context-path: /
  max-http-header-size: 8KB

spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:development}
  
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 100MB
      enabled: true
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        jdbc:
          time_zone: UTC

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:your-secret-key-change-in-production}
  expiration: 604800000 # 7 days in milliseconds

# File Upload Configuration
file:
  upload:
    dir: ${UPLOAD_DIR:uploads}
    max-size: 10MB

# CORS Configuration
cors:
  allowed-origins: ${CORS_ORIGINS:http://localhost:5173,http://localhost:3000}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when-authorized
  # Observability Configuration - Fix for ObservationFilterChainDecorator error
  observations:
    web:
      server:
        enabled: true
    annotations:
      enabled: false
  metrics:
    web:
      server:
        enabled: true
        request:
          autotime:
            enabled: false
  tracing:
    enabled: false

# Logging Configuration
logging:
  level:
    com.couplewebsite: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO
    com.zaxxer.hikari: WARN
    org.springframework.transaction: DEBUG
    org.hibernate.engine.transaction: DEBUG

---
# Development Profile
spring:
  config:
    activate:
      on-profile: development
  
  datasource:
    url: jdbc:sqlite:database.sqlite
    driver-class-name: org.sqlite.JDBC
    username: 
    password: 
  
  jpa:
    database-platform: org.hibernate.community.dialect.SQLiteDialect
    hibernate:
      ddl-auto: update
    show-sql: true
  
  flyway:
    enabled: true  # Enable Flyway to apply constraint fixes
    locations: classpath:db/migration
    baseline-on-migrate: true
    baseline-version: 0

---
# Production Profile
spring:
  config:
    activate:
      on-profile: production

  datasource:
    # Use PostgreSQL for Railway deployment
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/railway}
    driver-class-name: org.postgresql.Driver
    # Railway provides DATABASE_URL with embedded credentials, so these might not be needed
    # but keeping them as fallback
    username: ${DATABASE_USERNAME:}
    password: ${DATABASE_PASSWORD:}
    hikari:
      maximum-pool-size: 15
      minimum-idle: 3
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
      validation-timeout: 3000
      initialization-fail-timeout: 1
      leak-detection-threshold: 30000
      connection-test-query: SELECT 1
      test-while-idle: true
      test-on-borrow: true
      test-on-return: false
      pool-name: HikariCP-Railway
      register-mbeans: true
      auto-commit: true

  jpa:
    # Use PostgreSQL dialect for Railway deployment
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
    transaction:
      default-timeout: 30
      rollback-on-commit-failure: true
  
  flyway:
    enabled: false
    locations: classpath:db/migration
    baseline-on-migrate: true
    baseline-version: 0
    validate-on-migrate: false
    out-of-order: true
    ignore-missing-migrations: true
    ignore-ignored-migrations: true
    ignore-pending-migrations: true

server:
  port: ${PORT:8080}

# Production CORS Configuration
cors:
  allowed-origins: ${CORS_ORIGINS:https://*.railway.app,https://scott-zoe-production.up.railway.app,https://*.up.railway.app,http://localhost:8081,http://localhost:3000,http://localhost:5173}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

logging:
  level:
    com.couplewebsite: INFO
    org.springframework.security: WARN
    org.hibernate: WARN
    org.springframework.web: WARN
    org.springframework.boot: WARN
