server:
  port: 3001
  servlet:
    context-path: /
  max-http-header-size: 8KB

spring:
  profiles:
    active: development
  
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      enabled: true
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        jdbc:
          time_zone: UTC

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:your-secret-key-change-in-production}
  expiration: 604800000 # 7 days in milliseconds

# File Upload Configuration
file:
  upload:
    dir: ${UPLOAD_DIR:uploads}
    max-size: 10MB

# CORS Configuration
cors:
  allowed-origins: ${CORS_ORIGINS:http://localhost:5173,http://localhost:3000}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when-authorized

# Logging Configuration
logging:
  level:
    com.couplewebsite: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO

---
# Development Profile
spring:
  config:
    activate:
      on-profile: development
  
  datasource:
    url: jdbc:sqlite:database.sqlite
    driver-class-name: org.sqlite.JDBC
    username: 
    password: 
  
  jpa:
    database-platform: org.hibernate.community.dialect.SQLiteDialect
    hibernate:
      ddl-auto: update
    show-sql: true

---
# Production Profile
spring:
  config:
    activate:
      on-profile: production

  datasource:
    # Use PostgreSQL if DATABASE_URL is provided, otherwise fall back to SQLite
    url: ${DATABASE_URL:jdbc:sqlite:database.sqlite}
    driver-class-name: ${DATABASE_DRIVER:org.sqlite.JDBC}
    hikari:
      maximum-pool-size: 5
      minimum-idle: 0
      connection-timeout: 30000
      idle-timeout: 10000
      max-lifetime: 1800000

  jpa:
    # Use PostgreSQL dialect if DATABASE_URL contains postgresql, otherwise SQLite
    database-platform: ${DATABASE_PLATFORM:org.hibernate.community.dialect.SQLiteDialect}
    hibernate:
      ddl-auto: update
    show-sql: false

server:
  port: ${PORT:10000}

# Production CORS Configuration
cors:
  allowed-origins: ${CORS_ORIGINS:https://*.railway.app}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

logging:
  level:
    com.couplewebsite: INFO
    org.springframework.security: WARN
    org.hibernate: WARN
    org.springframework.web: WARN
    org.springframework.boot: WARN
